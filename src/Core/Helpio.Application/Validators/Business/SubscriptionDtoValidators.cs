using FluentValidation;
using Helpio.Ir.Application.DTOs.Business;

namespace Helpio.Ir.Application.Validators.Business
{
    public class UpdateSubscriptionDtoValidator : AbstractValidator<UpdateSubscriptionDto>
    {
        public UpdateSubscriptionDtoValidator()
        {
            RuleFor(x => x.Name)
                .NotEmpty().WithMessage("??? ?????? ?????? ???")
                .Length(2, 100).WithMessage("??? ?????? ???? ??? 2 ?? 100 ??????? ????");

            RuleFor(x => x.Description)
                .MaximumLength(1000).WithMessage("??????? ?????? 1000 ??????? ????")
                .When(x => !string.IsNullOrEmpty(x.Description));

            RuleFor(x => x.EndDate)
                .GreaterThan(DateTime.UtcNow).WithMessage("????? ????? ???? ?? ????? ????")
                .When(x => x.EndDate.HasValue);

            RuleFor(x => x.Price)
                .GreaterThan(0).WithMessage("???? ???? ????? ?? ??? ????")
                .LessThan(100000).WithMessage("???? ?????? 100,000 ????");

            RuleFor(x => x.BillingCycleDays)
                .GreaterThan(0).WithMessage("???? ???????? ???? ????? ?? ??? ????")
                .LessThanOrEqualTo(365).WithMessage("???? ???????? ?????? 365 ??? ????");

            RuleFor(x => x.Status)
                .IsInEnum().WithMessage("????? ?????? ????? ????");

            RuleFor(x => x.IsActive)
                .NotNull().WithMessage("????? ???? ???? ?????? ???");

            RuleFor(x => x.Features)
                .MaximumLength(2000).WithMessage("???????? ?????? 2000 ??????? ????")
                .When(x => !string.IsNullOrEmpty(x.Features));
        }
    }
}