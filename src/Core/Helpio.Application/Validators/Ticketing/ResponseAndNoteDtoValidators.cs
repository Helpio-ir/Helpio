using FluentValidation;
using Helpio.Ir.Application.DTOs.Ticketing;

namespace Helpio.Ir.Application.Validators.Ticketing
{
    public class CreateResponseDtoValidator : AbstractValidator<CreateResponseDto>
    {
        public CreateResponseDtoValidator()
        {
            RuleFor(x => x.TicketId)
                .GreaterThan(0).WithMessage("???? ?????? ???");

            RuleFor(x => x.Content)
                .NotEmpty().WithMessage("?????? ???? ?????? ???")
                .Length(5, 5000).WithMessage("?????? ???? ???? ??? 5 ?? 5000 ??????? ????");

            RuleFor(x => x.IsFromCustomer)
                .NotNull().WithMessage("??? ?????????? ?????? ???");

            RuleFor(x => x.IsPrivate)
                .NotNull().WithMessage("????? ????? ???? ?????? ???");
        }
    }

    public class UpdateResponseDtoValidator : AbstractValidator<UpdateResponseDto>
    {
        public UpdateResponseDtoValidator()
        {
            RuleFor(x => x.Content)
                .NotEmpty().WithMessage("?????? ???? ?????? ???")
                .Length(5, 5000).WithMessage("?????? ???? ???? ??? 5 ?? 5000 ??????? ????");

            RuleFor(x => x.IsPrivate)
                .NotNull().WithMessage("????? ????? ???? ?????? ???");
        }
    }

    public class CreateNoteDtoValidator : AbstractValidator<CreateNoteDto>
    {
        public CreateNoteDtoValidator()
        {
            RuleFor(x => x.TicketId)
                .GreaterThan(0).WithMessage("???? ?????? ???");

            RuleFor(x => x.Description)
                .NotEmpty().WithMessage("??????? ??????? ?????? ???")
                .Length(5, 2000).WithMessage("??????? ??????? ???? ??? 5 ?? 2000 ??????? ????");

            RuleFor(x => x.IsPrivate)
                .NotNull().WithMessage("????? ????? ???? ?????? ???");
        }
    }

    public class UpdateNoteDtoValidator : AbstractValidator<UpdateNoteDto>
    {
        public UpdateNoteDtoValidator()
        {
            RuleFor(x => x.Description)
                .NotEmpty().WithMessage("??????? ??????? ?????? ???")
                .Length(5, 2000).WithMessage("??????? ??????? ???? ??? 5 ?? 2000 ??????? ????");

            RuleFor(x => x.IsPrivate)
                .NotNull().WithMessage("????? ????? ???? ?????? ???");
        }
    }
}