using FluentValidation;
using Helpio.Ir.Application.DTOs.Core;

namespace Helpio.Ir.Application.Validators.Core
{
    public class CreateSupportAgentDtoValidator : AbstractValidator<CreateSupportAgentDto>
    {
        public CreateSupportAgentDtoValidator()
        {
            RuleFor(x => x.AgentCode)
                .NotEmpty().WithMessage("?? ??????? ?????? ???")
                .Length(3, 20).WithMessage("?? ??????? ???? ??? 3 ?? 20 ??????? ????")
                .Matches(@"^[A-Z0-9]+$").WithMessage("?? ??????? ??? ???? ???? ???? ? ????? ????");

            RuleFor(x => x.UserId)
                .GreaterThan(0).WithMessage("????? ?????? ???");

            RuleFor(x => x.TeamId)
                .GreaterThan(0).WithMessage("??? ?????? ???");

            RuleFor(x => x.ProfileId)
                .GreaterThan(0).WithMessage("??????? ?????? ???");

            RuleFor(x => x.Department)
                .NotEmpty().WithMessage("??? ?????? ???")
                .Length(2, 50).WithMessage("??? ???? ??? 2 ?? 50 ??????? ????");

            RuleFor(x => x.Position)
                .NotEmpty().WithMessage("??? ?????? ???")
                .Length(2, 50).WithMessage("??? ???? ??? 2 ?? 50 ??????? ????");

            RuleFor(x => x.Specialization)
                .NotEmpty().WithMessage("???? ?????? ???")
                .Length(2, 100).WithMessage("???? ???? ??? 2 ?? 100 ??????? ????");

            RuleFor(x => x.SupportLevel)
                .InclusiveBetween(1, 5).WithMessage("??? ???????? ???? ??? 1 ?? 5 ????");

            RuleFor(x => x.HireDate)
                .LessThanOrEqualTo(DateTime.UtcNow).WithMessage("????? ??????? ????????? ?? ????? ????");

            RuleFor(x => x.Salary)
                .GreaterThan(0).WithMessage("???? ???? ????? ?? ??? ????")
                .LessThan(1000000).WithMessage("???? ?????? 1,000,000 ????");

            RuleFor(x => x.MaxConcurrentTickets)
                .GreaterThan(0).WithMessage("?????? ???? ?????? ???? ????? ?? ??? ????")
                .LessThanOrEqualTo(50).WithMessage("?????? ???? ?????? ?????? 50 ????");
        }
    }

    public class UpdateSupportAgentDtoValidator : AbstractValidator<UpdateSupportAgentDto>
    {
        public UpdateSupportAgentDtoValidator()
        {
            RuleFor(x => x.TeamId)
                .GreaterThan(0).WithMessage("??? ?????? ???");

            RuleFor(x => x.Department)
                .NotEmpty().WithMessage("??? ?????? ???")
                .Length(2, 50).WithMessage("??? ???? ??? 2 ?? 50 ??????? ????");

            RuleFor(x => x.Position)
                .NotEmpty().WithMessage("??? ?????? ???")
                .Length(2, 50).WithMessage("??? ???? ??? 2 ?? 50 ??????? ????");

            RuleFor(x => x.Specialization)
                .NotEmpty().WithMessage("???? ?????? ???")
                .Length(2, 100).WithMessage("???? ???? ??? 2 ?? 100 ??????? ????");

            RuleFor(x => x.SupportLevel)
                .InclusiveBetween(1, 5).WithMessage("??? ???????? ???? ??? 1 ?? 5 ????");

            RuleFor(x => x.MaxConcurrentTickets)
                .GreaterThan(0).WithMessage("?????? ???? ?????? ???? ????? ?? ??? ????")
                .LessThanOrEqualTo(50).WithMessage("?????? ???? ?????? ?????? 50 ????");

            RuleFor(x => x.IsActive)
                .NotNull().WithMessage("????? ???? ???? ?????? ???");

            RuleFor(x => x.IsAvailable)
                .NotNull().WithMessage("????? ?? ????? ???? ?????? ???");
        }
    }
}